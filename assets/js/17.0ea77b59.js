(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{343:function(a,s,t){"use strict";t.r(s);var n=t(4),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"java类和对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java类和对象"}},[a._v("#")]),a._v(" Java类和对象")]),a._v(" "),s("p",[a._v("Java是一种面向对象的编程语言，因此在Java中，类和对象是两个非常重要的概念。本文将介绍Java中类和对象的基础知识。")]),a._v(" "),s("h2",{attrs:{id:"类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类"}},[a._v("#")]),a._v(" 类")]),a._v(" "),s("p",[a._v("在Java中，类是一种用户定义的数据类型，用于表示一组相关的数据和方法。类定义了一种新的数据类型，可以用来创建该类的对象。类由变量和方法组成。")]),a._v(" "),s("h3",{attrs:{id:"类的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类的定义"}},[a._v("#")]),a._v(" 类的定义")]),a._v(" "),s("p",[a._v("在Java中，定义一个类需要使用"),s("code",[a._v("class")]),a._v("关键字。下面是一个类的基本结构：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyClass")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 类变量")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 实例变量")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 构造函数")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 方法")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("myMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 方法体")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br")])]),s("p",[a._v("上面的代码定义了一个名为"),s("code",[a._v("MyClass")]),a._v("的类，该类具有一个类变量"),s("code",[a._v("x")]),a._v("、一个实例变量"),s("code",[a._v("y")]),a._v("、一个构造函数和一个方法"),s("code",[a._v("myMethod()")]),a._v("。")]),a._v(" "),s("h3",{attrs:{id:"类的访问修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类的访问修饰符"}},[a._v("#")]),a._v(" 类的访问修饰符")]),a._v(" "),s("p",[a._v("在Java中，可以使用访问修饰符来控制类、变量和方法的可见性。Java中有四种访问修饰符："),s("code",[a._v("public")]),a._v("、"),s("code",[a._v("protected")]),a._v("、"),s("code",[a._v("private")]),a._v("和默认（没有修饰符）。下表列出了这些修饰符的可见性：")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("修饰符")]),a._v(" "),s("th",[a._v("类内部")]),a._v(" "),s("th",[a._v("同一包中")]),a._v(" "),s("th",[a._v("子类")]),a._v(" "),s("th",[a._v("其他包")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("public")]),a._v(" "),s("td",[a._v("✔️")]),a._v(" "),s("td",[a._v("✔️")]),a._v(" "),s("td",[a._v("✔️")]),a._v(" "),s("td",[a._v("✔️")])]),a._v(" "),s("tr",[s("td",[a._v("protected")]),a._v(" "),s("td",[a._v("✔️")]),a._v(" "),s("td",[a._v("✔️")]),a._v(" "),s("td",[a._v("✔️")]),a._v(" "),s("td",[a._v("❌")])]),a._v(" "),s("tr",[s("td",[a._v("private")]),a._v(" "),s("td",[a._v("✔️")]),a._v(" "),s("td",[a._v("❌")]),a._v(" "),s("td",[a._v("❌")]),a._v(" "),s("td",[a._v("❌")])]),a._v(" "),s("tr",[s("td",[a._v("默认（无修饰符）")]),a._v(" "),s("td",[a._v("✔️")]),a._v(" "),s("td",[a._v("✔️")]),a._v(" "),s("td",[a._v("❌")]),a._v(" "),s("td",[a._v("❌")])])])]),a._v(" "),s("h3",{attrs:{id:"类的实例化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类的实例化"}},[a._v("#")]),a._v(" 类的实例化")]),a._v(" "),s("p",[a._v("在Java中，要使用一个类，必须先创建该类的一个对象。要创建一个类的对象，需要使用"),s("code",[a._v("new")]),a._v("关键字。下面是一个创建"),s("code",[a._v("MyClass")]),a._v("类对象的示例：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyClass")]),a._v(" myObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面的代码创建了一个名为"),s("code",[a._v("myObj")]),a._v("的"),s("code",[a._v("MyClass")]),a._v("对象，并将其初始化为"),s("code",[a._v("x=10")]),a._v("、"),s("code",[a._v("y=20")]),a._v("。")]),a._v(" "),s("h2",{attrs:{id:"对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[a._v("#")]),a._v(" 对象")]),a._v(" "),s("p",[a._v("在Java中，对象是类的一个实例。对象具有状态和行为。例如，一辆汽车可以是一个对象。它的状态可以是其颜色、重量和品牌，而其行为可以是启动、加速和停止。")]),a._v(" "),s("h3",{attrs:{id:"对象的访问修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的访问修饰符"}},[a._v("#")]),a._v(" 对象的访问修饰符")]),a._v(" "),s("p",[a._v("在Java中，对象的访问修饰符与类的访问修饰符相同。如果一个类被声明为"),s("code",[a._v("public")]),a._v("，则该类的对象也可以在其他包中访问。")]),a._v(" "),s("h3",{attrs:{id:"对象的创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的创建"}},[a._v("#")]),a._v(" 对象的创建")]),a._v(" "),s("p",[a._v("要创建一个对象，必须先声明一个对象变量，然后使用"),s("code",[a._v("new")]),a._v("关键字创建该对象。下面是一个创建"),s("code",[a._v("Car")]),a._v("类对象的示例：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Car")]),a._v(" myCar "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Car")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面的代码创建了一个名为"),s("code",[a._v("myCar")]),a._v("的"),s("code",[a._v("Car")]),a._v("对象。")]),a._v(" "),s("h3",{attrs:{id:"对象的访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的访问"}},[a._v("#")]),a._v(" 对象的访问")]),a._v(" "),s("p",[a._v("要访问对象的变量和方法，需要使用点号（"),s("code",[a._v(".")]),a._v("）运算符。下面是一个访问"),s("code",[a._v("myCar")]),a._v("对象变量和方法的示例：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("myCar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"red"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmyCar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("上面的代码将"),s("code",[a._v("myCar")]),a._v("对象的颜色设置为"),s("code",[a._v("red")]),a._v("，然后启动该车。")]),a._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",[a._v("Java中的类和对象是面向对象编程的基础。类是一种用户定义的数据类型，用于表示一组相关的数据和方法。对象是类\n的一个实例，具有状态和行为。在Java中，要使用一个类，必须先创建该类的一个对象。要创建一个类的对象，需要使用"),s("code",[a._v("new")]),a._v("关键字。要访问对象的变量和方法，需要使用点号（"),s("code",[a._v(".")]),a._v("）运算符。")]),a._v(" "),s("p",[a._v("在Java中，类和对象是非常重要的概念。通过使用类和对象，可以将代码组织成更好的结构，并使其更易于维护和扩展。理解Java中的类和对象是成为一名优秀的Java程序员的关键之一。")]),a._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://www.w3schools.com/java/java_classes.asp",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java Classes and Objects"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.tutorialspoint.com/java/java_classes_objects.htm",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java - Classes"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.javatpoint.com/java-object-and-classes",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java - Objects and Classes"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);