(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{379:function(s,e,a){"use strict";a.r(e);var r=a(4),t=Object(r.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("Docker是一种流行的容器化平台，它使开发人员可以轻松地在不同的环境中运行应用程序。本文将介绍Docker的概念知识和使用方法，帮助您更好地理解Docker的工作原理和如何使用它。")]),s._v(" "),e("h2",{attrs:{id:"概念知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概念知识"}},[s._v("#")]),s._v(" 概念知识")]),s._v(" "),e("p",[s._v("Docker是一种容器化技术，它可以将应用程序及其所有依赖项打包到一个独立的、可移植的容器中。每个Docker容器都是一个独立的环境，包括操作系统、库、应用程序和所有依赖项。这使得开发人员可以轻松地在不同的环境中运行应用程序，而无需担心不同的系统配置和依赖项。")]),s._v(" "),e("p",[s._v("Docker容器是基于Docker镜像创建的。Docker镜像是一个只读的模板，包括应用程序及其所有依赖项。Docker容器是从Docker镜像创建的，可以在其中运行应用程序。每个Docker容器都是独立的，可以在任何Docker主机上运行。")]),s._v(" "),e("p",[s._v("Docker主机是运行Docker引擎的计算机，可以运行Docker容器。Docker引擎是Docker平台的核心组件，它负责管理Docker容器和Docker镜像。")]),s._v(" "),e("h2",{attrs:{id:"使用方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[s._v("#")]),s._v(" 使用方法")]),s._v(" "),e("ol",[e("li",[s._v("安装Docker")])]),s._v(" "),e("p",[s._v("首先，您需要在计算机上安装Docker引擎。在Linux上，您可以使用以下命令安装Docker：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce docker-ce-cli containerd.io\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("在Windows和Mac OS上，您可以从Docker官网下载和安装Docker Desktop应用程序。")]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[s._v("创建Docker镜像")])]),s._v(" "),e("p",[s._v("您可以使用Dockerfile文件创建Docker镜像。Dockerfile是一个包含指令的文本文件，用于构建Docker镜像。以下是一个简单的Dockerfile示例：")]),s._v(" "),e("div",{staticClass:"language-dockerfile line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ubuntu:latest")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt-get update && apt-get install -y nginx")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-g"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"daemon off;"')]),s._v("]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("该Dockerfile从Ubuntu镜像开始，安装NGINX，并将其设置为Docker容器的默认CMD。")]),s._v(" "),e("p",[s._v("使用以下命令构建Docker镜像：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" my-nginx "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("该命令使用当前目录中的Dockerfile文件构建名为“my-nginx”的Docker镜像。")]),s._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[s._v("运行Docker容器")])]),s._v(" "),e("p",[s._v("使用以下命令运行Docker容器：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":80 my-nginx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("该命令从“my-nginx”Docker镜像创建Docker容器，并将容器的80端口映射到主机的80端口。该容器在后台运行。")]),s._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[s._v("查看Docker容器")])]),s._v(" "),e("p",[s._v("使用以下命令查看正在运行的Docker容器：")]),s._v(" "),e("p",[e("code",[s._v("docker ps")])]),s._v(" "),e("p",[s._v("该命令将列出所有正在运行的Docker容器及其相关信息，如容器ID、镜像、命令、创建时间等。")]),s._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[s._v("进入Docker容器")])]),s._v(" "),e("p",[s._v("使用以下命令进入正在运行的Docker容器：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("container-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /bin/bash\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("该命令将在容器中打开一个新的终端会话，并允许您在容器内执行命令。")]),s._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[s._v("停止和删除Docker容器")])]),s._v(" "),e("p",[s._v("使用以下命令停止正在运行的Docker容器：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stop "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("container-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("该命令将停止容器的运行。")]),s._v(" "),e("p",[s._v("使用以下命令删除Docker容器：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("container-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("该命令将删除容器。如果容器正在运行，请先使用“docker stop”命令停止容器，然后再删除容器。")]),s._v(" "),e("h2",{attrs:{id:"结论"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[s._v("#")]),s._v(" 结论")]),s._v(" "),e("p",[s._v("Docker是一种流行的容器化平台，它可以帮助开发人员轻松地在不同的环境中运行应用程序。本文介绍了Docker的概念知识和使用方法，包括如何安装Docker、创建Docker镜像、运行Docker容器、进入Docker容器、停止和删除Docker容器等。希望本文可以帮助您更好地理解Docker的工作原理和如何使用它。")])])}),[],!1,null,null,null);e.default=t.exports}}]);